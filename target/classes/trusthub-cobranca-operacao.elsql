@NAME(buscar_status_atendimento_cobranca)
	SELECT 
		id AS id, descricao AS descricao 
	FROM 
		 TrustHub.cob.status_atendimento WITH (NOLOCK) 
	Order By descricao
	

@NAME(consultar_atendimento_cobranca)
	  SELECT 
             ca.id,
             id_cedente, 
             id_sacado, 
             id_status_atendimento, 
             descricao, 
             data_retorno,
             data_previsao,
             e.nome as empresa,
             u.nome as nomeUsuario,
             id_usuario, 
             data_inclusao, 
             data_exclusao
       FROM
             COB.COBRANCA_ATENDIMENTO CA WITH (NOLOCK) 
      		 INNER JOIN cob.usuario u with(nolock) ON u.id = ca.id_usuario
       		 INNER JOIN cob.empresa e with(nolock) ON e.id = u.empresa
       WHERE
             id_cedente = :idCedente AND
             id_sacado = :idSacado
       ORDER BY 
       		 ca.id desc
       		 
@NAME(consultar_atendimento_cobranca_titulo)
	  SELECT 
             ca.id,
             ca.id_cedente, 
             ca.id_sacado, 
             ca.id_status_atendimento, 
             ca.descricao, 
             ca.data_retorno,
             ca.data_previsao,
             e.nome as empresa,
             u.nome as nomeUsuario,
             ca.id_usuario, 
             ca.data_inclusao, 
             ca.data_exclusao
       FROM
             COB.COBRANCA_ATENDIMENTO CA WITH (NOLOCK) 
      		 INNER JOIN cob.usuario u with(nolock) ON u.id = ca.id_usuario
       		 INNER JOIN cob.empresa e with(nolock) ON e.id = u.empresa
       		 LEFT JOIN  cob.titulos_atendimento t WITH (NOLOCK) ON (ca.id = t.id and t.tipo_arquivo = 'C')
       WHERE
             id_cedente = :idCedente AND
             id_sacado = :idSacado AND
             id_titulo = :idTitulo
       ORDER BY 
       		 ca.id desc       		 


@NAME(inserir_atendimento_cobranca)
	INSERT INTO TrustHub.COB.COBRANCA_ATENDIMENTO 
						( 
							id_cedente, 
						    id_sacado, 
						    id_cedente_srm, 
						    id_sacado_srm, 
							id_status_atendimento, 
							descricao, 
							data_retorno,
							data_previsao,
							id_usuario, 
							data_inclusao, 
							data_exclusao
						)
	VALUES
						(
							:idCedente, 
						    :idSacado, 
						    :idCedenteSRM, 
						    :idSacadoSRM, 
							:idStatusAtendimento, 
							:descricao, 
							:dataRetorno,
							:dataPrevisao,
							:idUsuario, 
							:dataInclusao, 
							:dataExclusao
						)
						
						
@NAME(inserir_atendimento_arquivo)
	INSERT INTO TrustHub.COB.ATENDIMENTO_ARQUIVO 
						(
							id,
							id_arquivo,
							tipo_arquivo,
							data_inclusao,
							data_exclusao
						)
	VALUES
						(
							:id,
							:idArquivo,
							:tipoArquivo,
							:dataInclusao,
							:dataExclusao
						)
						
@NAME(inserir_atendimento_titulo)		
	INSERT INTO TrustHub.COB.TITULOS_ATENDIMENTO 
						(
							id,
							id_titulo,
							tipo_arquivo
						)
	VALUES
						(
							:id,
							:idTitulo,
							:tipoArquivo
						)	
						
@NAME(consultar_titulos_cobranca)
	SELECT 
		id, id_titulo, tipo_arquivo 
	FROM 
		TrustHub.cob.titulos_atendimento
	WHERE 
		id = :idAtendimento
	  	AND tipo_arquivo = :tipoArquivo									
						
						
@NAME(buscar_status_atendimento_juridico)
	SELECT 
		id AS id, descricao AS descricao 
	FROM 
		TrustHub.cob.status_juridico WITH (NOLOCK) 
    ORDER BY 
    	descricao 

@NAME(consultar_atendimento_juridico)
	SELECT
             cj.id,
             id_cedente,
             id_sacado,
             id_status_juridico,
             numero_processo,
             autor,
             reu,
             vara,
             comarca,
             uf,
             objeto,
             data_distribuicao,
             descricao,
             data_retorno,
             data_previsao,
             e.nome as empresa,
             u.nome as nomeUsuario,
             id_usuario,
             data_inclusao,
             data_exclusao
       FROM
             cob.cobranca_juridico cj WITH (NOLOCK) 
      		 INNER JOIN cob.usuario u with(nolock) ON u.id = cj.id_usuario
       		 INNER JOIN cob.empresa e with(nolock) ON e.id = u.empresa
       WHERE
             id_cedente = :idCedente AND
             id_sacado = :idSacado
       ORDER BY
       		 cj.id desc
       		 

@NAME(consultar_atendimento_juridico_titulo)
	SELECT
             cj.id,
             cj.id_cedente,
             cj.id_sacado,
             cj.id_status_juridico,
             cj.numero_processo,
             cj.autor,
             cj.reu,
             cj.vara,
             cj.comarca,
             cj.uf,
             cj.objeto,
             cj.data_distribuicao,
             cj.descricao,
             cj.data_retorno,
             cj.data_previsao,
             e.nome as empresa,
             u.nome as nomeUsuario,
             cj.id_usuario,
             cj.data_inclusao,
             cj.data_exclusao
       FROM
             cob.cobranca_juridico cj WITH (NOLOCK) 
      		 INNER JOIN cob.usuario u with(nolock) ON u.id = cj.id_usuario
       		 INNER JOIN cob.empresa e with(nolock) ON e.id = u.empresa
       		 LEFT JOIN  cob.titulos_atendimento t WITH (NOLOCK) ON (cj.id = t.id and t.tipo_arquivo = 'J')
       WHERE
             id_cedente = :idCedente AND
             id_sacado = :idSacado AND
             id_titulo = :idTitulo
       ORDER BY
       		 cj.id desc       		 
	
@NAME(inserir_atendimento_juridico)	
	INSERT INTO TrustHub.COB.COBRANCA_JURIDICO
						(
							id_cedente,
							id_sacado,
							id_cedente_srm, 
						    id_sacado_srm,
							id_status_juridico,
							numero_processo,
							autor,
							reu,
							vara,
							comarca,
							uf,
							objeto,
							data_distribuicao,
							descricao,
							data_retorno,
							data_previsao,
							id_usuario,
							data_inclusao,
							data_exclusao
						)
	VALUES
						(
							:idCedente,
							:idSacado,
							:idCedenteSRM, 
						    :idSacadoSRM,
							:idStatusJuridico,
							:numeroProcesso,
							:autor,
							:reu,
							:vara,
							:comarca,
							:uf,
							:objeto,
							:dataDistribuicao,
							:descricao,
							:dataRetorno,
							:dataPrevisao,
							:idUsuario,
							:dataInclusao,
							:dataExclusao
						)					
        	    
        	    
@NAME(consultar_dados_arquivo_cedente_sacado_cobranca)	
	SELECT
		A.ID, 
		A.ID_ARQUIVO, 
		A.TIPO_ARQUIVO, 
		AA.NOME_ARQUIVO_ORIGINAL AS NOME, 
		AA.EXTENSAO
	FROM 
		COB.COBRANCA_ATENDIMENTO C WITH (NOLOCK) ,  
		COB.ATENDIMENTO_ARQUIVO A WITH (NOLOCK),
		ARQUIVO.ARQUIVO AA WITH (NOLOCK)  
	WHERE
		C.ID = A.ID AND
		AA.ID = A.ID_ARQUIVO AND
		C.ID = :idAtendimento AND
		C.ID_CEDENTE = :idCedente AND
		C.ID_SACADO = :idSacado AND
		A.TIPO_ARQUIVO = :tipoArquivo
		

@NAME(consultar_dados_arquivo_cedente_sacado_juridico)	
	SELECT
		A.ID, 
		A.ID_ARQUIVO, 
		A.TIPO_ARQUIVO, 
		AA.NOME_ARQUIVO_ORIGINAL AS NOME, 
		AA.EXTENSAO
	FROM 
		COB.COBRANCA_JURIDICO J WITH (NOLOCK) ,  
		COB.ATENDIMENTO_ARQUIVO A WITH (NOLOCK),
		ARQUIVO.ARQUIVO AA WITH (NOLOCK)  
	WHERE
		J.ID = A.ID AND
		AA.ID = A.ID_ARQUIVO AND
		J.ID = :idAtendimento AND
		J.ID_CEDENTE = :idCedente AND
		J.ID_SACADO = :idSacado AND
		A.TIPO_ARQUIVO = :tipoArquivo

		
@NAME(buscar_status_atendimento_cobranca_id)		
   SELECT 
   		id AS id, descricao AS descricao 
   FROM 
   		TrustHub.cob.status_atendimento WITH (NOLOCK)
   WHERE 
   		id = :idStatusAtendimento
   
@NAME(buscar_status_atendimento_juridico_id)		
   SELECT 
   		id AS id, descricao AS descricao 
   	FROM 
   		TrustHub.cob.status_juridico WITH (NOLOCK)
   WHERE 
   		id = :idStatusJuridico   
   		
@NAME(buscar_dados_cliente)	   		
	SELECT c.id ,
	       c.id_segmento ,
	       c.id_pessoa ,
	       c.faturamento_anual ,
	       c.cliente_grupo ,
	       c.id_conta_externa
	FROM 
		dbo.cliente c
		LEFT JOIN dbo.pessoa_juridica pj ON pj.id_pessoa = c.id_pessoa
		LEFT JOIN dbo.pessoa_fisica pf ON pf.id_pessoa = c.id_pessoa
	WHERE 
		pf.cpf = :documento
	  	OR pj.cnpj = :documento
	  	
@NAME(buscar_arquivo)	   		
	SELECT id
      ,caminho
      ,nome_arquivo
      ,nome_arquivo_original
      ,extensao
      ,tamanho
      ,id_componente
      ,data_inclusao
      ,data_exclusao
   FROM 
   	  arquivo.arquivo
   WHERE 
      id = :idArquivo
   
   

@NAME(buscar_aviso_atendimento)
	SELECT cj.id AS idAtendimento,
	       cj.id_cedente AS cnpjCedente,
	       cj.id_sacado AS cnpjSacado,
	       cj.id_cedente_srm AS idCedenteSRM,
	       cj.id_sacado_srm AS idSacadoSRM,
	       sj.descricao AS status,
	       cj.descricao,
	       cj.data_previsao AS dataPrevisao,
	       cj.data_retorno AS dataRetorno,
	       t.id_titulo AS idTitulo,
	       t.tipo_arquivo AS tipoAtendimento,
	       CASE
	           WHEN datediff(DAY, cj.data_retorno, getdate()) > -1 THEN 1
	           ELSE 0
	       END AS atraso,
	       datediff(DAY, cj.data_retorno, getdate()) AS diasAtraso
	FROM cob.titulos_atendimento t
	LEFT JOIN cob.cobranca_juridico cj with(nolock) ON t.id = cj.id
	INNER JOIN cob.status_juridico sj with(nolock) ON sj.id = cj.id_status_juridico
	WHERE cj.data_retorno IS NOT NULL
	  AND cj.id_usuario = :idUsuario
	  AND cj.flag_retorno = 0
	  AND t.tipo_arquivo = 'J'
	UNION
	SELECT ca.id AS idAtendimento,
	       ca.id_cedente AS cnpjCedente,
	       ca.id_sacado AS cnpjSacado,
	       ca.id_cedente_srm AS idCedenteSRM,
	       ca.id_sacado_srm AS idSacadoSRM,
	       sa.descricao AS status,
	       ca.descricao,
	       ca.data_previsao AS dataPrevisao,
	       ca.data_retorno AS dataRetorno,
	       t.id_titulo AS idTitulo,
	       t.tipo_arquivo AS tipoAtendimento,
	       CASE
	           WHEN datediff(DAY, ca.data_retorno, getdate()) > -1 THEN 1
	           ELSE 0
	       END AS atraso,
	       datediff(DAY, ca.data_retorno, getdate()) AS diasAtraso
	FROM cob.titulos_atendimento t
	LEFT JOIN cob.cobranca_atendimento ca with(nolock) ON t.id = ca.id
	INNER JOIN cob.status_atendimento sa with(nolock) ON sa.id = ca.id_status_atendimento
	WHERE ca.data_retorno IS NOT NULL
	  AND ca.id_usuario = :idUsuario
	  AND ca.flag_retorno = 0
	  AND t.tipo_arquivo = 'C'
	ORDER BY data_retorno
	
	
@NAME(desativar_alerta_cobranca)	
    UPDATE 
    	cob.cobranca_atendimento 
    SET 
    	flag_retorno = 1
    WHERE 
    	id = :idAtendimento


	   	
@NAME(desativar_alerta_juridico)	
    UPDATE 
    	cob.cobranca_juridico 
    SET 
    	flag_retorno = 1
    WHERE 
    	id = :idAtendimento
	   
	   
@NAME(consultar_quantidade_atendimentos)	
	SELECT 
		id_titulo,
		COUNT (CASE WHEN TIPO_ARQUIVO = 'C' THEN 1 ELSE NULL END) AS quantidadeAtendimentoCobranca, 
		COUNT (CASE	WHEN TIPO_ARQUIVO = 'J' THEN 1 ELSE NULL END) AS quantidadeAtendimentoJuridico
	FROM 
		cob.titulos_atendimento 
	WHERE 
		id_titulo in (:idsTitulos) 
	GROUP BY 
		id_titulo
		
@NAME(consultar_atendimento_cobranca_filtro)
	  SELECT 
             ca.id,
             id_cedente, 
             id_sacado, 
             id_status_atendimento, 
             descricao, 
             data_retorno,
             data_previsao,
             e.nome as empresa,
             u.nome as nomeUsuario,
             id_usuario, 
             data_inclusao, 
             data_exclusao
       FROM
             COB.COBRANCA_ATENDIMENTO CA WITH (NOLOCK) 
      		 INNER JOIN cob.usuario u with(nolock) ON u.id = ca.id_usuario
       		 INNER JOIN cob.empresa e with(nolock) ON e.id = u.empresa
    --   WHERE convert(date, data_inclusao, 103) between :dataInicial and :dataFinal
       		 
@NAME(consultar_atendimento_juridico_filtro)
	SELECT
             cj.id,
             id_cedente,
             id_sacado,
             id_status_juridico,
             numero_processo,
             autor,
             reu,
             vara,
             comarca,
             uf,
             objeto,
             data_distribuicao,
             descricao,
             data_retorno,
             data_previsao,
             e.nome as empresa,
             u.nome as nomeUsuario,
             id_usuario,
             data_inclusao,
             data_exclusao
       FROM
             cob.cobranca_juridico cj WITH (NOLOCK) 
      		 INNER JOIN cob.usuario u with(nolock) ON u.id = cj.id_usuario
       		 INNER JOIN cob.empresa e with(nolock) ON e.id = u.empresa
   --    WHERE convert(date, data_inclusao, 103) between :dataInicial and :dataFinal
   
@NAME(consultar_atendimento_cobranca_auditoria)
	select
		 ca.id, 
		 ca.id_cedente as idCedente, 
		 ca.id_sacado as idSacado, 
		 ca.id_status_atendimento as idStatus,
		 sa.descricao collate sql_latin1_general_cp1251_ci_as as status,
		 ca.id_usuario as idUsuario, 
		 u.nome as usuario, 
		 ca.data_inclusao as dataInclusao, 
		 e.nome as empresa,
		 (select count(id) from cob.titulos_atendimento ta with(nolock) where ta.id = ca.id and ta.tipo_arquivo = 'C') as qtdTitulos
	from cob.cobranca_atendimento ca with(nolock)
		inner join cob.status_atendimento sa with(nolock) on sa.id = ca.id_status_atendimento
		inner join cob.usuario u with(nolock) on u.id = ca.id_usuario
		inner join cob.empresa e with(nolock) on e.id = u.empresa
	WHERE convert(date, ca.data_inclusao, 103) between :dataInicial and :dataFinal
	
@NAME(consultar_atendimento_juridico_auditoria)
	select
		 cj.id, 
		 cj.id_cedente as idCedente, 
		 cj.id_sacado as idSacado, 
		 cj.id_status_juridico as idStatus, 
		 sj.descricao collate sql_latin1_general_cp1251_ci_as as status,
		 cj.id_usuario as idUsuario, 
		 u.nome as usuario, 
		 cj.data_inclusao as dataInclusao, 
		 e.nome as empresa,
		 (select count(id) from cob.titulos_atendimento ta with(nolock) where ta.id = cj.id and ta.tipo_arquivo = 'J') as qtdTitulos
	from cob.cobranca_juridico cj with(nolock)
		inner join cob.status_juridico sj with(nolock) on sj.id = cj.id_status_juridico
		inner join cob.usuario u with(nolock) on u.id = cj.id_usuario
		inner join cob.empresa e with(nolock) on e.id = u.empresa
	WHERE convert(date, cj.data_inclusao, 103) between :dataInicial and :dataFinal
